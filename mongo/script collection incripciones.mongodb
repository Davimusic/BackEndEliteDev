// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'DBPROYECTO';
const collection = 'inscripciones';
// Create a new database.
use(database);
// Create a new collection.
/*
db.createCollection( collection, {
  validator:{
        $jsonSchema: {
      
        required: ["id_proyecto","id_estudiante","fecha_ingreso","fecha_egreso"],
       
        properties:{
            id_proyecto:{
                bsonType: 'objectId'
            },


            id_estudiante:{
                bsonType: 'objectId'
            },
           
            estado: {
                 enum: ['Activo', 'Inactivo']
            },
             
             fecha_ingreso: {
                bsonType: 'date'
            },
             fecha_egreso: {
                bsonType: 'date'
            }

        }
        }
     }
  })

  */
 /*
db.inscripciones.insertOne( { 'id_proyecto': db.proyectos.findOne({nom_proyecto:'Desarrollo web3'}, {_id: 1})._id,  
       'id_estudiante': db.usuarios.findOne({correo:'maria@gmail.com'}, {_id: 1})._id,   
       'estado':'Activo',
       'fecha_ingreso': new Date (),
       'fecha_egreso': new Date (new Date().getTime() + 60*24*60*60000)
      })
*/

/*
  db.inscripciones.insertMany([
     { 
       'id_proyecto': db.proyectos.findOne({nom_proyecto:'Desarrollo python'}, {_id: 1})._id,    
       'id_estudiante': db.usuarios.findOne({correo:'jjortizx@gmail.com'}, {_id: 1})._id,   
       'estado':'Inactivo',
       'fecha_ingreso': new Date (),
       'fecha_egreso': new Date (new Date().getTime() + 60*24*60*60000)
      },

    { 'id_proyecto': db.proyectos.findOne({nom_proyecto:'Ingles'}, {_id: 1})._id,  
       'id_estudiante': db.usuarios.findOne({correo:'maria@gmail.com'}, {_id: 1})._id,   
       'estado':'Activo',
       'fecha_ingreso': new Date (),
       'fecha_egreso': new Date (new Date().getTime() + 60*24*60*60000)
      }
])
*/
db.inscripciones.find();